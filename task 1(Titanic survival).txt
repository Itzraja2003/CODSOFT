{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "# Task : 1 Titanic Survival Prediction\n",
    "\n",
    "#### Data Science Internship at CodeSoft\n",
    "\n",
    "> Author : Yogesh Baghel\n",
    "\n",
    "> Batch : Sep\\-Oct\n",
    "\n",
    "> Domain : Data Science\n",
    ">\n",
    "> ---\n",
    "\n",
    "### Task : TITANIC SURVIVAL PREDICTION\n",
    "\n",
    "- Use the Titanic dataset to build a model that predicts whether a passenger on the Titanic survived or not. This is a classic beginner project with readily available data. \n",
    "- The dataset typically used for this project contains information about individual passengers, such as their age, gender, ticket class, fare, cabin, and whether or not they survived.\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "## Data Description\n",
    "\n",
    "- **pclass**: A proxy for socio\\-economic status \\(SES\\)\n",
    "- - 1st = Upper\n",
    "  - 2nd = Middle\n",
    "  - 3rd = Lower\n",
    "- **age**: Age is fractional if less than 1. If the age is estimated, is it in the form of xx.5\n",
    "- **sibsp**: The dataset defines family relations in this way...\n",
    "- - Sibling = brother, sister, stepbrother, stepsister\n",
    "  - Spouse = husband, wife \\(mistresses and fiancés were ignored\\)\n",
    "- **parch**: The dataset defines family relations in this way...\n",
    "- - Parent = mother, father\n",
    "  - Child = daughter, son, stepdaughter, stepson Some children travelled only with a nanny, therefore parch=0 for them.\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>892</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Kelly, Mr. James</td>\n",
       "      <td>male</td>\n",
       "      <td>34.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>330911</td>\n",
       "      <td>7.8292</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Q</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>893</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Wilkes, Mrs. James (Ellen Needs)</td>\n",
       "      <td>female</td>\n",
       "      <td>47.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>363272</td>\n",
       "      <td>7.0000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>894</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>Myles, Mr. Thomas Francis</td>\n",
       "      <td>male</td>\n",
       "      <td>62.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>240276</td>\n",
       "      <td>9.6875</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Q</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>895</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Wirz, Mr. Albert</td>\n",
       "      <td>male</td>\n",
       "      <td>27.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>315154</td>\n",
       "      <td>8.6625</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>896</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Hirvonen, Mrs. Alexander (Helga E Lindqvist)</td>\n",
       "      <td>female</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3101298</td>\n",
       "      <td>12.2875</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>413</th>\n",
       "      <td>1305</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Spector, Mr. Woolf</td>\n",
       "      <td>male</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>A.5. 3236</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>414</th>\n",
       "      <td>1306</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Oliva y Ocana, Dona. Fermina</td>\n",
       "      <td>female</td>\n",
       "      <td>39.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>PC 17758</td>\n",
       "      <td>108.9000</td>\n",
       "      <td>C105</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>415</th>\n",
       "      <td>1307</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Saether, Mr. Simon Sivertsen</td>\n",
       "      <td>male</td>\n",
       "      <td>38.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>SOTON/O.Q. 3101262</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>416</th>\n",
       "      <td>1308</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Ware, Mr. Frederick</td>\n",
       "      <td>male</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>359309</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>417</th>\n",
       "      <td>1309</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Peter, Master. Michael J</td>\n",
       "      <td>male</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2668</td>\n",
       "      <td>22.3583</td>\n",
       "      <td>NaN</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>418 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     PassengerId  Survived  Pclass  \\\n",
       "0            892         0       3   \n",
       "1            893         1       3   \n",
       "2            894         0       2   \n",
       "3            895         0       3   \n",
       "4            896         1       3   \n",
       "..           ...       ...     ...   \n",
       "413         1305         0       3   \n",
       "414         1306         1       1   \n",
       "415         1307         0       3   \n",
       "416         1308         0       3   \n",
       "417         1309         0       3   \n",
       "\n",
       "                                             Name     Sex   Age  SibSp  Parch  \\\n",
       "0                                Kelly, Mr. James    male  34.5      0      0   \n",
       "1                Wilkes, Mrs. James (Ellen Needs)  female  47.0      1      0   \n",
       "2                       Myles, Mr. Thomas Francis    male  62.0      0      0   \n",
       "3                                Wirz, Mr. Albert    male  27.0      0      0   \n",
       "4    Hirvonen, Mrs. Alexander (Helga E Lindqvist)  female  22.0      1      1   \n",
       "..                                            ...     ...   ...    ...    ...   \n",
       "413                            Spector, Mr. Woolf    male   NaN      0      0   \n",
       "414                  Oliva y Ocana, Dona. Fermina  female  39.0      0      0   \n",
       "415                  Saether, Mr. Simon Sivertsen    male  38.5      0      0   \n",
       "416                           Ware, Mr. Frederick    male   NaN      0      0   \n",
       "417                      Peter, Master. Michael J    male   NaN      1      1   \n",
       "\n",
       "                 Ticket      Fare Cabin Embarked  \n",
       "0                330911    7.8292   NaN        Q  \n",
       "1                363272    7.0000   NaN        S  \n",
       "2                240276    9.6875   NaN        Q  \n",
       "3                315154    8.6625   NaN        S  \n",
       "4               3101298   12.2875   NaN        S  \n",
       "..                  ...       ...   ...      ...  \n",
       "413           A.5. 3236    8.0500   NaN        S  \n",
       "414            PC 17758  108.9000  C105        C  \n",
       "415  SOTON/O.Q. 3101262    7.2500   NaN        S  \n",
       "416              359309    8.0500   NaN        S  \n",
       "417                2668   22.3583   NaN        C  \n",
       "\n",
       "[418 rows x 12 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "titanic_data = pd.read_csv(\"tested.csv\")\n",
    "titanic_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>892</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Kelly, Mr. James</td>\n",
       "      <td>male</td>\n",
       "      <td>34.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>330911</td>\n",
       "      <td>7.8292</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Q</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>893</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Wilkes, Mrs. James (Ellen Needs)</td>\n",
       "      <td>female</td>\n",
       "      <td>47.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>363272</td>\n",
       "      <td>7.0000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>894</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>Myles, Mr. Thomas Francis</td>\n",
       "      <td>male</td>\n",
       "      <td>62.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>240276</td>\n",
       "      <td>9.6875</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Q</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>895</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Wirz, Mr. Albert</td>\n",
       "      <td>male</td>\n",
       "      <td>27.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>315154</td>\n",
       "      <td>8.6625</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>896</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Hirvonen, Mrs. Alexander (Helga E Lindqvist)</td>\n",
       "      <td>female</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3101298</td>\n",
       "      <td>12.2875</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   PassengerId  Survived  Pclass  \\\n",
       "0          892         0       3   \n",
       "1          893         1       3   \n",
       "2          894         0       2   \n",
       "3          895         0       3   \n",
       "4          896         1       3   \n",
       "\n",
       "                                           Name     Sex   Age  SibSp  Parch  \\\n",
       "0                              Kelly, Mr. James    male  34.5      0      0   \n",
       "1              Wilkes, Mrs. James (Ellen Needs)  female  47.0      1      0   \n",
       "2                     Myles, Mr. Thomas Francis    male  62.0      0      0   \n",
       "3                              Wirz, Mr. Albert    male  27.0      0      0   \n",
       "4  Hirvonen, Mrs. Alexander (Helga E Lindqvist)  female  22.0      1      1   \n",
       "\n",
       "    Ticket     Fare Cabin Embarked  \n",
       "0   330911   7.8292   NaN        Q  \n",
       "1   363272   7.0000   NaN        S  \n",
       "2   240276   9.6875   NaN        Q  \n",
       "3   315154   8.6625   NaN        S  \n",
       "4  3101298  12.2875   NaN        S  "
      ]
     },
     "execution_count": 4,
     "metadata": {
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "titanic_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 418 entries, 0 to 417\n",
      "Data columns (total 12 columns):\n",
      " #   Column       Non-Null Count  Dtype  \n",
      "---  ------       --------------  -----  \n",
      " 0   PassengerId  418 non-null    int64  \n",
      " 1   Survived     418 non-null    int64  \n",
      " 2   Pclass       418 non-null    int64  \n",
      " 3   Name         418 non-null    object \n",
      " 4   Sex          418 non-null    object \n",
      " 5   Age          332 non-null    float64\n",
      " 6   SibSp        418 non-null    int64  \n",
      " 7   Parch        418 non-null    int64  \n",
      " 8   Ticket       418 non-null    object \n",
      " 9   Fare         417 non-null    float64\n",
      " 10  Cabin        91 non-null     object \n",
      " 11  Embarked     418 non-null    object \n",
      "dtypes: float64(2), int64(5), object(5)\n",
      "memory usage: 39.3+ KB\n"
     ]
    }
   ],
   "source": [
    "titanic_data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>418.000000</td>\n",
       "      <td>418.000000</td>\n",
       "      <td>418.000000</td>\n",
       "      <td>332.000000</td>\n",
       "      <td>418.000000</td>\n",
       "      <td>418.000000</td>\n",
       "      <td>417.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>1100.500000</td>\n",
       "      <td>0.363636</td>\n",
       "      <td>2.265550</td>\n",
       "      <td>30.272590</td>\n",
       "      <td>0.447368</td>\n",
       "      <td>0.392344</td>\n",
       "      <td>35.627188</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>120.810458</td>\n",
       "      <td>0.481622</td>\n",
       "      <td>0.841838</td>\n",
       "      <td>14.181209</td>\n",
       "      <td>0.896760</td>\n",
       "      <td>0.981429</td>\n",
       "      <td>55.907576</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>892.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.170000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>996.250000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>21.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>7.895800</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>1100.500000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>27.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>14.454200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>1204.750000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>31.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1309.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>76.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>512.329200</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       PassengerId    Survived      Pclass         Age       SibSp  \\\n",
       "count   418.000000  418.000000  418.000000  332.000000  418.000000   \n",
       "mean   1100.500000    0.363636    2.265550   30.272590    0.447368   \n",
       "std     120.810458    0.481622    0.841838   14.181209    0.896760   \n",
       "min     892.000000    0.000000    1.000000    0.170000    0.000000   \n",
       "25%     996.250000    0.000000    1.000000   21.000000    0.000000   \n",
       "50%    1100.500000    0.000000    3.000000   27.000000    0.000000   \n",
       "75%    1204.750000    1.000000    3.000000   39.000000    1.000000   \n",
       "max    1309.000000    1.000000    3.000000   76.000000    8.000000   \n",
       "\n",
       "            Parch        Fare  \n",
       "count  418.000000  417.000000  \n",
       "mean     0.392344   35.627188  \n",
       "std      0.981429   55.907576  \n",
       "min      0.000000    0.000000  \n",
       "25%      0.000000    7.895800  \n",
       "50%      0.000000   14.454200  \n",
       "75%      0.000000   31.500000  \n",
       "max      9.000000  512.329200  "
      ]
     },
     "execution_count": 6,
     "metadata": {
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "titanic_data.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "PassengerId      0\n",
       "Survived         0\n",
       "Pclass           0\n",
       "Name             0\n",
       "Sex              0\n",
       "Age             86\n",
       "SibSp            0\n",
       "Parch            0\n",
       "Ticket           0\n",
       "Fare             1\n",
       "Cabin          327\n",
       "Embarked         0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 7,
     "metadata": {
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "titanic_data.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "### Age and Cabin has Null values or blank....\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
   ],
   "source": [
    "#  we will fill blank with median value\n",
    "titanic_data['Age'].fillna(titanic_data['Age'].median(), inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Embarked\n",
       "S    270\n",
       "C    102\n",
       "Q     46\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 13,
     "metadata": {
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Count the Embarked\n",
    "titanic_data['Embarked'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
   ],
   "source": [
    "# replace blanks with mode value\n",
    "titanic_data['Embarked'].fillna('S', inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "PassengerId      0\n",
       "Survived         0\n",
       "Pclass           0\n",
       "Name             0\n",
       "Sex              0\n",
       "Age              0\n",
       "SibSp            0\n",
       "Parch            0\n",
       "Ticket           0\n",
       "Fare             1\n",
       "Cabin          327\n",
       "Embarked         0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 15,
     "metadata": {
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# check Null value in data\n",
    "titanic_data.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
   ],
   "source": [
    "# In fare column has also null value, replace with  median\n",
    "titanic_data['Fare'].fillna(titanic_data['Fare'].median(), inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
   ],
   "source": [
    "# We will remove the \"Cabin\" column because it contains a significant number of missing values.\n",
    "titanic_data.drop(columns=\"Cabin\", inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "PassengerId    0\n",
      "Survived       0\n",
      "Pclass         0\n",
      "Name           0\n",
      "Sex            0\n",
      "Age            0\n",
      "SibSp          0\n",
      "Parch          0\n",
      "Ticket         0\n",
      "Fare           0\n",
      "Embarked       0\n",
      "dtype: int64\n",
      "   PassengerId  Survived  Pclass  \\\n",
      "0          892         0       3   \n",
      "1          893         1       3   \n",
      "2          894         0       2   \n",
      "3          895         0       3   \n",
      "4          896         1       3   \n",
      "\n",
      "                                           Name     Sex   Age  SibSp  Parch  \\\n",
      "0                              Kelly, Mr. James    male  34.5      0      0   \n",
      "1              Wilkes, Mrs. James (Ellen Needs)  female  47.0      1      0   \n",
      "2                     Myles, Mr. Thomas Francis    male  62.0      0      0   \n",
      "3                              Wirz, Mr. Albert    male  27.0      0      0   \n",
      "4  Hirvonen, Mrs. Alexander (Helga E Lindqvist)  female  22.0      1      1   \n",
      "\n",
      "    Ticket     Fare Embarked  \n",
      "0   330911   7.8292        Q  \n",
      "1   363272   7.0000        S  \n",
      "2   240276   9.6875        Q  \n",
      "3   315154   8.6625        S  \n",
      "4  3101298  12.2875        S  \n"
     ]
    }
   ],
   "source": [
    "# Last check null value and Dataset\n",
    "print(titanic_data.isnull().sum())\n",
    "print(titanic_data.head())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "## Now Data is Cleaned...\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "# Exploratory Data Analysis\n",
    "\n",
    "#### survival variable describe as\n",
    "\n",
    "0 = No, 1 = Yes\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
   ],
   "source": [
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Survived\n",
       "0    266\n",
       "1    152\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 23,
     "metadata": {
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "titanic_data['Survived'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Survived', ylabel='count'>"
      ]
     },
     "execution_count": 25,
     "metadata": {
     },
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 864x504 with 1 Axes>"
      ]
     },
     "execution_count": 25,
     "metadata": {
      "image/png": {
       "height": 424,
       "width": 723
      },
      "needs_background": "light"
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sns.countplot(data=titanic_data,x='Survived')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "### Pclass data describe as:\n",
    "\n",
    "- 1st = Upper\n",
    "- 2nd = Middle\n",
    "- 3rd = Lower\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Pclass', ylabel='count'>"
      ]
     },
     "execution_count": 26,
     "metadata": {
     },
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 864x504 with 1 Axes>"
      ]
     },
     "execution_count": 26,
     "metadata": {
      "image/png": {
       "height": 424,
       "width": 723
      },
      "needs_background": "light"
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sns.countplot(data=titanic_data,x='Pclass')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Sex', ylabel='count'>"
      ]
     },
     "execution_count": 27,
     "metadata": {
     },
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 864x504 with 1 Axes>"
      ]
     },
     "execution_count": 27,
     "metadata": {
      "image/png": {
       "height": 424,
       "width": 723
      },
      "needs_background": "light"
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sns.countplot(data=titanic_data,x='Sex')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 864x504 with 1 Axes>"
      ]
     },
     "execution_count": 35,
     "metadata": {
      "image/png": {
       "height": 424,
       "width": 723
      },
      "needs_background": "light"
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sns.histplot(data=titanic_data, x='Age')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 0,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
   ],
   "source": [
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "## \\# Show count of survival wrt pclass\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 864x504 with 1 Axes>"
      ]
     },
     "execution_count": 38,
     "metadata": {
      "image/png": {
       "height": 424,
       "width": 723
      },
      "needs_background": "light"
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sns.countplot(x=titanic_data['Survived'], hue=titanic_data['Pclass'])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "## \\# Show count of survival wrt gender\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0      male\n",
       "1    female\n",
       "2      male\n",
       "3      male\n",
       "4    female\n",
       "Name: Sex, dtype: object"
      ]
     },
     "execution_count": 10,
     "metadata": {
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "titanic_data['Sex'].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAABacAAANRCAYAAAD3YgA3AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8pXeV/AAAACXBIWXMAABYlAAAWJQFJUiTwAABGu0lEQVR4nO3de5SeVX3//c8XIkFiAAMiovDEqghaBQkKaouAleKviiBULCogVWsrFfDQ8tSi4KHaHyrikT5aRLACrQcqnrCVcBJUTBCqRjlIVKpUIQSBQIBkP3/MHZpMJuTAZE9m5vVaa9aVe1+nfcVZynpzue9qrQUAAAAAAHraaKwnAAAAAADA5CNOAwAAAADQnTgNAAAAAEB34jQAAAAAAN2J0wAAAAAAdCdOAwAAAADQnTgNAAAAAEB34jQAAAAAAN2J0wAAAAAAdCdOAwAAAADQnTgNAAAAAEB34jQAAAAAAN1NGesJTEZVdWOSzZPMH+OpAAAAAAA8FDOT/K619vi1PVGcHhubP/zhD5+x8847zxjriQAAAAAArKt58+bl7rvvXqdzxemxMX/nnXeeMWfOnLGeBwAAAADAOps1a1bmzp07f13OteY0AAAAAADdidMAAAAAAHQnTgMAAAAA0J04DQAAAABAd+I0AAAAAADdidMAAAAAAHQnTgMAAAAA0N2UsZ4AAAAAALD+LV26NAsWLMgdd9yRxYsXp7U21lNiA1NVmTp1aqZPn54ZM2Zko43W77vN4jQAAAAATHBLly7NL3/5yyxatGisp8IGrLWWe+65J/fcc0/uuuuubL/99us1UIvTAAAAADDBLViwIIsWLcqUKVOy7bbbZtq0aev9rVjGn6VLl+auu+7KzTffnEWLFmXBggXZeuut19v9/AYCAAAAwAR3xx13JEm23XbbTJ8+XZhmRBtttFGmT5+ebbfdNsn//t6st/ut16sDAAAAAGNu8eLFSZJp06aN8UwYD5b9niz7vVlfxGkAAAAAmOCWffmhN6ZZE1WVJOv9SzP9NgIAAAAA8IBlcXp9E6cBAAAAAOhOnAYAAAAAoDtxGgAAAACA7sRpAAAAAGDcWrJkST75yU/mec97XmbMmJGHPexh2WabbfL0pz89r3nNa/LlL395rKfIKkwZ6wkAAAAAAKyLJUuW5EUvelG+8Y1vZMstt8yf/Mmf5HGPe1zuvffe/OhHP8rnPve5/OQnP8kBBxww1lNlBOI0AAAAADAunX322fnGN76RXXbZJRdffHG22GKLFfYvWrQo3/3ud8dodqyOZT0AAAAAgHHp8ssvT5IceeSRK4XpJNlss82yzz77rDR+9tlnZ5999smWW26ZTTfdNDvvvHPe/e53Z/HixQ8cc9ttt2XmzJmZOnVq5syZs8L5S5cuzT777JOqyllnnTXKTzV5iNMAAAAAwLi01VZbJUmuvfbaNT7nqKOOymGHHZbrr78+Bx98cN7whjdkxowZOeGEE7L//vvn/vvvT5I88pGPzNlnn52lS5fm0EMPzR133PHANU466aRcdNFFOfLII/OqV71qdB9qEhGnAQAAAIBx6aUvfWke9rCH5bTTTsurXvWqfPGLX8zPf/7zVR5/xhln5NOf/nQOOuigXHvttfnnf/7nfOADH8i3v/3tvOMd78hFF12Uj33sYw8c/+xnPzvvec97csMNN+R1r3tdkmT27Nl597vfnZ133nmFY1l74jQAAAAAMC494xnPyGc/+9k8+tGPzmc/+9kcfPDBmTlzZrbaaqscdNBBOf/881c4/tRTT82UKVNy+umn5+EPf/gK+0444YRstdVW+Zd/+ZcVxt/61rdm//33zznnnJP3vve9ecUrXpGpU6fm3HPPzWabbbben3Ei84WIAAAAAMC49bKXvSwHHXRQZs+encsuuyxXXXVVLrvsspx33nk577zzcvjhh+eMM87I3Xffnauvvjpbb711PvShD414ralTp2bevHkrjFVVzjzzzOy66675u7/7uyTJP/3TP+VpT3va+n60CU+cBgAAAADGtYc97GHZb7/9st9++yVJlixZki984Qs56qijcuaZZ+aggw7KM5/5zLTW8tvf/jYnnXTSWl3/UY96VPbaa6+cc8452WqrrawzPUos6wEAAAAATCgbb7xxXvayl+W4445Lklx44YXZYostkgwtBdJae9Cf4c4555ycc8452XrrrXPrrbfmjW98Y9fnmajEaQAAAABgQpo+fXqSpLWWRzziEXnqU5+aH/3oR1mwYMEaX+P666/P6173ujzqUY/KVVddlb322iuf+tSncs4556yvaU8a4jQAAAAAMC6dffbZ+Y//+I8sXbp0pX0333xzPvnJTyZJ9tprryTJm970ptx777056qijsnDhwpXOue222zJ37twHPt977715+ctfnjvvvDOf+cxn8rjHPS6f+9znstVWW+Uv/uIvcsMNN6yfB5skrDkNAAAAAIxL3/3ud3Pqqadm2223zR/8wR/k8Y9/fJLkxhtvzFe/+tXcfffdeclLXpJDDjkkSXLUUUdlzpw5+fjHP54nPOEJ+eM//uPssMMOWbBgQW688cZccsklefWrX53TTjstSfI3f/M3mTNnTt70pjflhS98YZLksY99bM4444y8+MUvzqGHHprLL788m2yyydj8BYxz4jQAAAAAMC69+c1vzpOe9KT853/+Z6655ppccMEFueeee7LVVltl7733zmGHHZbDDjssVfXAOR/72Mfywhe+MKeddlr+8z//MwsXLsyMGTOyww475K1vfWte+cpXJknOP//8nHrqqdl9993zvve9b4X7vuhFL8pxxx2XU045JW9961tz6qmndn3uiaJGWuCb9auq5uy22267zZkzZ6ynAgAAAMAkMG/evCTJzjvvPMYzYbxY09+ZWbNmZe7cuXNba7PW9h7WnAYAAAAAoDtxGgAAAACA7qw5zZib9dYzx3oKwDgx5+TDx3oKAAAAwCjx5jQAAAAAAN2J0wAAAAAAdCdOAwAAAADQnTgNAAAAAEB34jQAAAAAAN2J0wAAAAAAdCdOAwAAAADQnTgNAAAAAEB34jQAAAAAAN2J0wAAAAAAdCdOAwAAAAB0MH/+/FRVjjzyyLGeygZhylhPAAAAAAAYe7PeeuZYT+FBzTn58LGeAqPMm9MAAAAAAHQnTgMAAAAA0J04DQAAAABMGsuv+3zDDTfkkEMOyVZbbZXp06dnv/32yw9/+MMkyW9/+9u87nWvy2Me85hsuummeeYzn5nZs2evcK1f/epXeec735nnPve52XbbbbPJJptku+22y2GHHZYf//jHazWvRYsW5b3vfW923XXXTJs2LY94xCPy7Gc/O2efffaoPfuGxprTAAAAAMCkM3/+/Oyxxx7Zeeedc+SRR2b+/Pn50pe+lL333jtXXHFF9t9//2y++eY59NBDs2DBgpxzzjl54QtfmGuvvTY77LBDkuSSSy7J+973vuyzzz45+OCD84hHPCLXXXddPv/5z+fLX/5yvv3tb2eXXXZZ7VwWLlyYfffdN1dddVV22223HHXUUVm6dGkuuOCCHHbYYfnRj36Ud7/73ev7r6Q7cRoAAAAAmHQuvvjivPvd787b3va2B8be9a535e1vf3v22GOPvOxlL8vHP/7xbLTR0OITL3jBC3L44YfnlFNOySmnnJIk2XffffM///M/mT59+grXvvrqq/Pc5z43xx9/fL7+9a+vdi7HHntsrrrqqvzjP/5j/uZv/uaB8XvuuScHHnhg/uEf/iGHHHJIdt1111F48g2HZT0AAAAAgEln5syZOf7441cYO+KII5Ikixcvzsknn/xAmE6Sww47LFOmTMkPfvCDB8a22WablcJ0kuyyyy7Zd999M3v27Nx3330POo9bb701n/3sZ7P77ruvEKaTZNNNN80//uM/prWWz33uc2v7iBs8b04DAAAAAJPOrrvumo033niFse222y5JsuOOO64UnTfeeOM8+tGPzk033bTC+Fe/+tWcdtpp+f73v59bbrkl999//wr7b7nlljzmMY9Z5TyuvPLKLFmyJFWVE088caX9y+L2vHnz1vjZxgtxGgAAAACYdLbYYouVxqZMmbLKfcv2L/8m9Kmnnppjjz02j3zkI/OCF7wgO+ywQzbbbLNUVc4777xcffXVWbx48YPO49Zbb00yFKmvvPLKVR535513rvaZxhtxGgAAAABgLd1///058cQTs+2222bu3LkrvR19xRVXrNF1loXw4447Lh/84AdHfZ4bMmtOAwAAAACspVtuuSULFy7Mc57znJXC9J133pm5c+eu0XWe9axnZaONNsqll166Pqa5QROnAQAAAADW0jbbbJPNNtssc+bMWWHJjfvuuy/HHHNMbrnlljW+zite8Yp8//vfz7ve9a4sWbJkpWNuuOGG3HjjjaM29w2FZT0AAAAAANbSRhttlDe+8Y153/vel6c97Wl5yUteknvvvTezZ8/OggULss8++2T27NlrdK2PfvSjue666/L2t789Z511Vv7gD/4gj370o/OrX/0q8+bNy5VXXpmzzz47j3/849fzU/XlzWkAAAAAgHXwrne9Kx/4wAfy8Ic/PP/0T/+UL37xi9l9993zve99LzvssMMaX2fzzTfPxRdfnI985CPZeuut84UvfCEf/OAHM3v27EyfPj2nnHJKXvCCF6zHJxkb1Vob6zlMOlU1Z7fddtttzpw5Yz2VDcKst5451lMAxok5Jx8+1lMAAAAYl+bNm5ck2Xnnncd4JowXa/o7M2vWrMydO3dua23W2t7Dm9MAAAAAAHQnTgMAAAAA0J04DQAAAABAd+I0AAAAAADdidMAAAAAAHQnTgMAAAAA0J04DQAAAABAd+I0AAAAAADdidMAAAAAAHQnTgMAAAAA0J04DQAAAABAd+MqTlfVVlX1mqr6UlVdX1V3V9XtVXVZVf15VW007PiZVdUe5OecB7nXEVX1vaq6c3CPi6rqRev/KQEAAAAAJr4pYz2BtfSnST6R5NdJZif5RZJHJ3lpkk8leWFV/WlrrQ077+ok541wvR+OdJOqen+SNye5Kcknk2yS5OVJzq+qv26tffShPwoAAAAAwOQ1rt6cTnJtkgOSPK619orW2v/bWjsqyU5Jfpnk4AyF6uF+0Fo7cYSfzw8/sKqek6EwfUOSp7fWjmutvSHJrCQLkry/qmaun8cDAAAAANa3D3/4w3nKU56Shz/84amqfOhDHxrrKa21I488MlWV+fPnj/VU1tm4enO6tXbhKsZvrqrTkrwnyd5JvvAQbvP6wfY9rbXblrvH/Kr6WJITkrw6yTsewj0AAAAAYIPyi3c+bayn8KB2ePt/jcp1zjnnnBxzzDF5xjOekWOPPTZTp07NnnvuOSrXZu2Mqzi9GvcNtvePsG+7qvqLJFsluTXJFa21a1ZxnX0H22+MsO/rGYrT+2YN4nRVzVnFrp1Wdy4AAAAAMPq+8pWvPLDdbrvtxng2k9uEiNNVNSXJ4YOPI0XlFwx+lj/noiRHtNZ+sdzYtCSPTXJna+3XI1znusF2x4c6ZwAAAACgv1/96ldJIkxvAMbbmtOr8r4kv5/ka621C5YbX5TkXRlaL/qRg5/nZejLFPdO8q1BkF5mi8H29lXcZ9n4lmsyqdbarJF+kvxkTc4HAAAAAEbHiSeemKrK7NmzkyRV9cDPMj/5yU9y5JFHZvvtt88mm2ySRz/60TnssMPy05/+dKXrLVvz+cYbb8xHP/rRPOUpT8mmm26amTNn5h/+4R/SWkuS/Nu//Vue9axnZdq0adlmm21y9NFH5+67717peuedd15e+cpXZscdd8y0adMybdq0zJo1Kx/+8IezdOnStXrW7373uznkkEOy7bbbZpNNNsn222+fv/iLv3ggzG8oxv2b01X1xgx9geFPkrxq+X2ttd8kefuwUy6pqv2SXJZkjySvSXJqh6kCAAAAAGNk7733TpKcccYZ+fnPf553vGPFVXu/8Y1v5KUvfWnuu+++vPjFL84Tn/jE3HTTTfniF7+Yr371q5k9e3Z22223la77lre8JRdddFFe/OIXZ7/99suXv/zlvO1tb8u9996bGTNm5Pjjj8+BBx6YP/zDP8x//Md/5GMf+1iWLFmST3ziEytc5/jjj89GG22UPfbYI4997GNz++2358ILL8wxxxyTK6+8MmedddYaPefpp5+e173udZk6dWoOOOCAbL/99rnuuuvyqU99Kueff36+853vZIcddli3v8RRNq7jdFUdnaGw/OMkz2+tLViT81pr91fVpzIUp/fK/8bpZW9GbzHiif87vnCdJgwAAAAAjIm99947e++9dy666KL8/Oc/z4knnvjAvttuuy1/9md/ls022yyXXHJJnvKUpzyw74c//GH23HPPvOY1r8ncuXNXuu6cOXNyzTXX5LGPfWySoTe0n/jEJ+bkk0/OZpttljlz5mTnnXdOkixevDjPeMYzcvrpp+ekk07KNtts88B1vvrVr+YJT3jCCtdeunRpXv3qV+fMM8/M0UcfnT322ONBn/Haa6/N61//+sycOTMXX3zxA3NKkm9961vZb7/9cswxx+RLX/rSmv/FrUfjdlmPqjo2yUeS/DDJPq21m9fyEr8dbB9Y1qO1dleS/07yiKp6zAjnPGmwvXYt7wUAAAAAbKDOPPPMLFy4MCeddNIKYTpJfv/3fz+vfe1rc9VVV+XHP/7xSueecMIJK0TgLbfcMgcccEAWLVqUv/zLv3wgTCfJ1KlTc+ihh+bee+/NvHnzVrjO8DCdJBtttFGOOeaYJMkFF1yw0v7hPvGJT+S+++7LqaeeusKckuT5z39+DjjggJx//vm54447VnutHsblm9NV9bcZWmf6B0le0Fq7ZR0us+dg+7Nh4xdmaHmQ/ZN8eti+Fy53DAAAAAAwAVxxxRVJkquvvnqFN6qXufbaoXdV582bt1K83n333Vc6ftmXLc6aNWulfcui8U033bTC+K233pqTTz45X/va1/Kzn/0sd9111wr7//u//3uNn+Piiy/OlVdeudL+3/zmN1myZEmuvfbaEefW27iL01V1QpJ3JpmTZL8HW8qjqnZL8oPW2tJh489Pctzg42eHnXZahuL026rqvNbabYNzZiZ5Q5LFWTlaAwAAAADj1K233pok+eQnP/mgx915550rjW2xxcorBE+ZMmW1++67774HxhYuXJhnPvOZufHGG/OsZz0rhx9+eGbMmJEpU6Zk4cKFOfXUU7N48eI1fo6TTz55rZ9jLIyrOF1VR2QoTC9JcmmSNy7/bZoD81trZwz+/MEkT6qqy5Ms+1cRT0+y7+DPJ7TWLl/+5Nba5VX1wSRvSnJNVX0+ySZJDk0yI8lft9bmj+ZzAQAAAABjZ1lEvvrqq/P0pz+9+/0/9alP5cYbb8w73vGOld7cvuKKK3LqqaeOfOIwy57j9ttvz+abbz7a0xx1423N6ccPthsnOTbJO0b4OXK5489KclWSZyZ5bZK/ytC60f+aZK/W2rtHuklr7c1JXp3k5iSvS3J4kh8leXFr7aOj+UAAAAAAwNjac8+hFYAvvfTSMbn/9ddfnyQ5+OCDV9p38cUXr/F1xvo51ta4itOttRNba7Wan72XO/6fW2svaq3NbK09orU2tbW2Q2vt0Nbag/4n1Fo7o7X2zNbatNba9Nba81prX1nvDwkAAAAAdPXqV786W265ZU466aR873vfW2n/0qVLc9FFF623+8+cOTNJVrrHVVddlfe+971rfJ2jjz46D3vYw3Lcccc9sE728u69994NKlyPq2U9AAAAAABG21ZbbZXPf/7zOeigg7Lnnnvm+c9/fp761KemqvLLX/4yV1xxRW699dbcc8896+X+hx9+eE4++eQce+yxmT17dp70pCfluuuuy1e+8pW89KUvzbnnnrtG19lpp51y+umn56ijjspTn/rU7L///tlxxx1z33335Re/+EUuvfTSPOpRj8pPfvKT9fIca0ucBgAAAAAmvec///m55ppr8v73vz8XXHBBLr300myyySbZbrvtsu+++4645MZo2W677XLppZfm+OOPz2WXXZYLLrggO+20Uz7+8Y/nj/7oj9Y4TifJK1/5yuyyyy75wAc+kNmzZ+eb3/xmpk2blu222y6HHHJIDj300PX2HGurWmtjPYdJp6rm7LbbbrvNmTNnrKeyQZj11jPHegrAODHn5MPHegoAAADj0rx585IkO++88xjPhPFiTX9nZs2alblz585trc1a23uMqzWnAQAAAACYGMRpAAAAAAC6E6cBAAAAAOhOnAYAAAAAoDtxGgAAAACA7sRpAAAAAAC6E6cBAAAAAHhAa63LfcRpAAAAAJjgqipJsnTp0jGeCePBsji97PdmfRGnAQAAAGCC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",
      "text/plain": [
       "<Figure size 864x504 with 1 Axes>"
      ]
     },
     "execution_count": 11,
     "metadata": {
      "image/png": {
       "height": 424,
       "width": 723
      },
      "needs_background": "light"
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sns.countplot(x=titanic_data['Survived'], hue=titanic_data['Sex'])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "### show survival wrt Age\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 864x504 with 1 Axes>"
      ]
     },
     "execution_count": 44,
     "metadata": {
      "image/png": {
       "height": 424,
       "width": 723
      },
      "needs_background": "light"
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sns.histplot(x=titanic_data['Age'], hue=titanic_data['Survived'], multiple='stack')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "### show survived wrt Embarked..\n",
    "\n",
    "Port of Embarkation\t\n",
    "\n",
    "- C = Cherbourg,\n",
    "- Q = Queenstown, \n",
    "- S = Southampton\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAABacAAANRCAYAAAD3YgA3AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8pXeV/AAAACXBIWXMAABYlAAAWJQFJUiTwAABFR0lEQVR4nO3deZRldXnv4e8LDSiIjAoYUNCA4oAKDtAamSJBRQHFoEYFjMZZQDN4RQSM5prEGwdwiMYAigoGFEQUjQIighABxYFBhY6Q2A5MAs3Y/bt/1Clsiqoeq3+nT/XzrFVr99nje+i17PbDZu9qrQUAAAAAAHpabdgDAAAAAACw6hGnAQAAAADoTpwGAAAAAKA7cRoAAAAAgO7EaQAAAAAAuhOnAQAAAADoTpwGAAAAAKA7cRoAAAAAgO7EaQAAAAAAuhOnAQAAAADoTpwGAAAAAKA7cRoAAAAAgO5mDXuAVVFVXZPkwUnmDHkUAAAAAIDlsWWS37fWtlraA8Xp4XjwAx/4wA233XbbDYc9CAAAAADAsrr88stz++23L9Ox4vRwzNl22203vPjii4c9BwAAAADAMtthhx1yySWXzFmWYz1zGgAAAACA7sRpAAAAAAC6E6cBAAAAAOhOnAYAAAAAoDtxGgAAAACA7sRpAAAAAAC6E6cBAAAAAOhu1rAHAAAAAABWTQsWLMgNN9yQW265JXfeeWdaa8MeaZVWVVlrrbWy7rrrZsMNN8xqq63Ye5vFaQAAAACguwULFuTaa6/NvHnzhj0KA6213HHHHbnjjjty2223ZYsttlihgVqcBgAAAAC6u+GGGzJv3rzMmjUrm266adZZZ50Vfqcui7ZgwYLcdtttmTt3bubNm5cbbrghG2+88Qq7nt9tAAAAAKC7W265JUmy6aabZt111xWmVwKrrbZa1l133Wy66aZJ/vB7tMKut0LPDgAAAAAwiTvvvDNJss466wx5EiYa/z0Z/z1aUcRpAAAAAKC78ZcfumN65VNVSbLCX1Dpdx4AAAAAgHuNx+kVTZwGAAAAAKA7cRoAAAAAgO7EaQAAAACAaXTcccelqnLccccNe5R7rYwzidMAAAAAwEpt/vz5+eQnP5mdd945G264YdZYY4089KEPzXbbbZdXv/rV+fKXvzzsEVkGs4Y9AAAAAADAVObPn5+99torZ555ZtZff/0873nPy+abb5677rorP/nJT/K5z30uV1xxRV7wghcMe9R77bvvvtlxxx2z2WabDXuUlZo4DQAAAACstD7/+c/nzDPPzBOf+MR8+9vfznrrrXef7fPmzcuFF144pOkmt956691vTu7PYz0AAAAAgJXW+eefnyQ58MADJw2+a6+9dnbdddd7Px955JGpqpxzzjn323fOnDmpqhx44IH3WX/ggQemqnL11Vfn6KOPznbbbZcHPvCB2WWXXXLiiSemqnLooYdOOt+dd96ZDTbYIJtttlnuueeeJPd/vvMdd9yR9ddfPw996EPv3Wei17/+9amqfOUrX7nP+iuuuCIHHnhgtthii6y55prZZJNN8rKXvSxXXnnlpOf5+c9/nhe/+MXZYIMNss4662T27Nk544wzJt132MRpAAAAAGCltdFGGyVJrrrqqhV+rYMPPjiHH354nvCEJ+Tggw/OM57xjOyzzz5Zb7318rnPfW7SsHzaaaflpptuyl/8xV9k1qzJH1TxgAc8IPvvv39++9vf5mtf+9r9tt9555056aSTsskmm2TPPfe8d/2ZZ56Z7bffPp/97Gfz1Kc+NYccckh23333fPGLX8zTnva0XHLJJfc5z89+9rPsuOOOOfnkk7PTTjvl4IMPzuabb5599tknX/ziF5fzn87081gPAAAAAGCl9cIXvjD/+I//mI9//OO55ZZbsu+++2aHHXbIIx7xiGm/1iWXXJJLL700W2211X3W77///vnEJz6RM888M3vttdd9th1//PFJkgMOOGCR5z7wwAPziU98Iscff3ye//zn32fbl7/85dx4441561vfem/gvvHGG/PSl740a6+9ds4999w89rGPvXf/H//4x9lxxx3z6le/+j6B+o1vfGOuv/76fPCDH8zBBx987/rTTjst++yzz5L/g+jEndMAAAAAwErryU9+ck444YRssskmOeGEE/KiF70oW265ZTbaaKPsu+++Of3006ftWn/7t397vzCd/CE8j4focXPnzs3Xv/71PPnJT84TnvCERZ57p512yjbbbJPTTz89N9xww322TRa4P/3pT+emm27KUUcddZ8wnSSPf/zj85rXvCaXXnppfvrTnyZJrrvuuvznf/5nttpqq7zpTW+6z/577713dt5550XONwzunAYAAAAAVmp//ud/nn333Tdnn312zjvvvFx66aU577zzcuqpp+bUU0/NK1/5ynuf87w8nva0p026fvbs2feG5RtvvDEbbLBBkuSzn/1s5s+ff79nWE/lgAMOyGGHHZYTTzwxb3jDG5Ikv/71r+8N3Nttt929+15wwQVJkh/+8Ic58sgj73eu8cecXH755XnsYx+bSy+9NEnyzGc+M6uvvvr99t9ll13y7W9/e4nm7EWcBgAAAABWemussUb22GOP7LHHHkmS+fPn55RTTsmrXvWqfPrTn86+++673I+u2HTTTafctnBYfv3rX59k7I7nNdZYIy972cuW6PyvfOUrc/jhh+f444+/N05/9rOfzT333HO/x4Jcf/31SZJPfvKTizznrbfemiS5+eabkySbbLLJpPst6rsNi8d6AAAAAAAjZ/XVV8+f//mf59BDD02SnHXWWUmS1VYbS56TvbzwpptuWuQ5F3Xn9Ste8Yqsttpq9z6C49JLL82PfvSjPPe5z83GG2+8RDNvvvnm2W233XLRRRfliiuuSDJ14F5vvfWSjN053Vqb8mc8ao/v/+tf/3rSa8+dO3eJZuxJnAYAAAAARta6666bJGmtJcm9j9y49tpr77fv97///WW+zhZbbJHddtstF154Ya688solfhHiROOPADn++OPzgx/8IJdddlme85zn5CEPech99ttxxx2TJN/5zneW6LxPfvKTkyTnnXde5s+ff7/t55xzzlLN2YM4DQAAAACstD7/+c/nP//zP7NgwYL7bZs7d+69j7141rOeleQPz40+9thj73P39LXXXpt3v/vdyzXLeFj+1Kc+lc9//vPZeOONs9deey3VOV74whfmwQ9+cE444YQcd9xx9znvwg466KCsv/76Oeqoo3LRRRfdb/uCBQvuE5w333zzPPvZz84111yTY4455j77nnbaaSvd86YTz5wGAAAAAFZiF154YT70oQ9l0003zTOf+cxstdVWSZJrrrkmZ5xxRm6//fbsvffe2W+//ZIkT3/60/OsZz0r5557bp72tKdlt912y69//eucfvrp+bM/+7NJ76heUvvuu28e/OAH54Mf/GDuvvvuvPnNb84aa6yxVOd44AMfmBe/+MX51Kc+lY9+9KPZaKON8rznPe9++2200UY5+eSTs++++2bHHXfM7rvvnsc97nGpqlx77bW54IILcv311+eOO+6495iPfOQj2WmnnXLIIYfkG9/4Rp74xCfm5z//eb70pS/l+c9/fk4//fRl/u4rgjgNAAAAAKy03va2t2XrrbfON7/5zVx22WX5+te/njvuuCMbbbRRdtlll7zsZS/Ly172svs8L/q0007L3/zN3+S0007L0Ucfna233jr/9E//lD322CNf+MIXlnmWtdde+96wnCz9Iz3GHXjggfnUpz6Vu+++Oy996Uuz5pprTrrf7rvvnssuuyzvf//78/Wvfz3f+c53suaaa+ZhD3tYdtttt7zoRS+6z/5bb711vve97+Xtb397vvnNb+acc87Jdtttl1NPPTW//e1vV7o4XePPYqGfqrp4++233/7iiy8e9igAAAAAMBSXX355kmTbbbcd8iRMZkl/f3bYYYdccskll7TWdljaa3jmNAAAAAAA3XmsBwAwchb+z/UAYDr4r4oBoD93TgMAAAAA0J07pwGAkbX/v54/7BEAGHEnvXb2sEcAgFWWO6cBAAAAAOhOnAYAAAAAoDtxGgAAAACA7sRpAAAAAAC6E6cBAAAAAOhOnAYAAAAAoDtxGgAAAACA7sRpAAAAAAC6E6cBAAAAAOhu1rAHAAAAAABYVlU17BGWSGtt2COsdNw5DQAAAAAwIq677rq86lWvysMe9rCstdZa2XLLLXPIIYfkxhtvHPZoS82d0wAAAADAyNv/X88f9giTOum1s6ftXL/4xS8ye/bs/OY3v8nee++dxzzmMbnooovyoQ99KGeeeWa++93vZqONNpq2661o7pwGAAAAABgBb3jDG/Kb3/wmH/7wh3Pqqafmfe97X84666wceuihufLKK3PYYYcNe8SlIk4DAAAAAKzkfvGLX+Qb3/hGttxyy7zxjW+8z7ajjjoq66yzTj7zmc/ktttuG9KES0+cBgAAAABYyZ199tlJkj322COrrXbfrLvuuuvmGc94RubNm5fvfe97wxhvmYjTAAAAAAAruSuvvDJJss0220y6feutt06SXHXVVd1mWl7iNAAAAADASu7mm29Okqy33nqTbh9ff9NNN/UaabmJ0wAAAAAAdCdOAwAAAACs5MbvjB6/g3qi8fXrr79+r5GWmzgNAAAAALCSe/SjH51k6mdK/+xnP0sy9TOpV0biNAAAAADASm7XXXdNknzjG9/IggUL7rPtlltuyXe/+92svfba2XHHHYcx3jIRpwEAAAAAVnKPetSjsscee2TOnDn5yEc+cp9tRxxxRG677ba84hWvyDrrrDOkCZferGEPAAAAAADA4n30ox/N7Nmz85a3vCXf+ta3su222+bCCy/M2WefnW222Sbvfe97hz3iUhGnAQAAAICRd9JrZw97hBXuUY96VL7//e/nXe96V84888x89atfzWabbZaDDz44RxxxRDbYYINhj7hUxGkAAAAAgBGxxRZb5Nhjjx32GNNCnAYAAAAARlZrbdgjsIy8EBEAAAAAgO7EaQAAAAAAuhOnAQAAAADoTpwGAAAAAKA7cRoAAAAAgO7EaQAAAAAAuhOnAQAAAADoTpwGAAAAAKA7cRoAAAAAgO7EaQAAAAAAuhOnAQAAAADoTpwGAAAAAKC7WcMeAAAAAABgWVXVsEdYIq21YY+w0nHnNAAAAADACDj55JPz5je/OX/yJ3+SBz/4wamqvPzlLx/2WMvMndMAAAAAwMhrxz5v2CNMqg46Y9rO9Z73vCc//OEP86AHPSibb755rrjiimk79zC4cxoAAAAAYAR84AMfyFVXXZXf//73+djHPjbscZabO6cBAAAAAEbArrvuOuwRppU7pwEAAAAA6E6cBgAAAACgO3EaAAAAAIDuRipOV9VGVfXqqvpSVf28qm6vqpur6ryq+suqWm3C/ltWVVvEz4mLuNYBVXVRVd06uMY5VbXXiv+WAAAAAAAz36i9EPHFST6W5FdJzk7yyySbJHlhkn9L8pyqenFrrU047odJTp3kfD+e7CJV9f4kb0tyXZJPJlkzyUuSnF5Vb26tHbP8XwUAAAAAYNU1anH6qiQvSHJGa23B+MqqekeSi5K8KGOh+pQJx/2gtXbkklygqmZnLEz/IslTW2s3Dtb/c5KLk7y/qr7SWpuzfF8FAAAAAGDVNVKP9WitndVaO33hMD1YPzfJxwcfd1nOy7xusHzveJgeXGNOko8kWSvJQct5DQAAAACAVdqo3Tm9KHcPlvdMsu1hVfXaJBsluT7JBa21y6Y4z26D5ZmTbPtaksMH+xyxuIGq6uIpNj1mcccCAAAAAMxkMyJOV9WsJK8cfJwsKj978LPwMeckOaC19suF1q2T5I+S3Npa+9Uk5/nZYLnN8s4MAAAAALA0Tj311Jx66qlJkrlz5yZJLrjgghx44IFJko033jjvf//7hzTd0psRcTrJ+5I8PslXW2tfX2j9vCR/n7GXIV49WLddkiOT7JrkW1X1pNbabYNt6w2WN09xnfH16y/JUK21HSZbP7ijevslOQcAAAAAsHh10BnDHmGF+8EPfpDjjz/+PuuuvvrqXH31WPp8xCMeMVJxeqSeOT2ZqnpLxl5geEWSVyy8rbX2m9bau1prl7TWbhr8nJtkjyQXJvnjJK/uPjQAAAAAwFI68sgj01qb8mfOnDnDHnGpjHScrqo3JflQkp8m2bW1dsOSHNdauyfJvw0+PmuhTeN3Rq+XyY2vv2npJgUAAAAAVoRFxdqV6Yf7G9k4XVWHJDk6yY8zFqbnLuUpfjtYrjO+YvB4j/9J8qCq2mySY7YeLK9aymsBAAAAALCQkYzTVfV3ST6Q5AcZC9O/WYbT7DhYXj1h/VmD5Z6THPOcCfsAAAAAALAMRi5OV9XhGXsB4sVJdm+t/W4R+25fVff7jlW1e5JDBx9PmLD544PlYVW1wULHbJnkjUnuTHLsMn8BAAAAAAAya9gDLI2qOiDJu5PMT/KdJG+pqom7zWmtHTf49b8k2bqqzk9y3WDddkl2G/z68Nba+Qsf3Fo7v6r+Jclbk1xWVScnWTPJ/kk2TPLm1tqc6fxeAAAAAACrmpGK00m2GixXT3LIFPt8O8lxg19/Jsm+SZ6asUdyrJHk10m+kOSY1tp3JjtBa+1tVfWjjN0p/VdJFiS5JMk/t9a+stzfAgAAAABgFTdScbq1dmSSI5di/08l+dQyXuu4/CFyAwAAAACsElprXa4zcs+cBgAAAABG3/jjehcsWDDkSZhoPE5P8kjlaSVOAwAAAADdrbXWWkmS2267bciTMNH478n479GKIk4DAAAAAN2tu+66SZK5c+fmlltuyYIFC7o9ToL7a61lwYIFueWWWzJ37twkf/g9WlFG6pnTAAAAAMDMsOGGG+a2227LvHnzct111w17HCZYe+21s+GGG67Qa4jTAAAAAEB3q622WrbYYovccMMNueWWW3LnnXe6c3rIqiprrbVW1l133Wy44YZZbbUV++ANcRoAAAAAGIrVVlstG2+8cTbeeONhj8IQeOY0AAAAAADdidMAAAAAAHQnTgMAAAAA0J04DQAAAABAd+I0AAAAAADdidMAAAAAAHQnTgMAAAAA0J04DQAAAABAd+I0AAAAAADdidMAAAAAAHQnTgMAAAAA0J04DQAAAABAd+I0AAAAAADdidMAAAAAAHQnTgMAAAAA0J04DQAAAABAd+I0AAAAAADdidMAAAAAAHQnTgMAAAAA0J04DQAAAABAd+I0AAAAAADdidMAAAAAAHQnTgMAAAAA0J04DQAAAABAd+I0AAAAAADdidMAAAAAAHQnTgMAAAAA0J04DQAAAABAd+I0AAAAAADdidMAAAAAAHQnTgMAAAAA0J04DQAAAABAd+I0AAAAAADdidMAAAAAAHQnTgMAAAAA0J04DQAAAABAd+I0AAAAAADdidMAAAAAAHQnTgMAAAAA0J04DQAAAABAd+I0AAAAAADdidMAAAAAAHQnTgMAAAAA0J04DQAAAABAd+I0AAAAAADdidMAAAAAAHQnTgMAAAAA0J04DQAAAABAd+I0AAAAAADdidMAAAAAAHQnTgMAAAAA0J04DQAAAABAd+I0AAAAAADdidMAAAAAAHQnTgMAAAAA0J04DQAAAABAd+I0AAAAAADdidMAAAAAAHQnTgMAAAAA0J04DQAAAABAd+I0AAAAAADdidMAAAAAAHQnTgMAAAAA0J04DQAAAABAd+I0AAAAAADdidMAAAAAAHQnTgMAAAAA0J04DQAAAABAd+I0AAAAAADdidMAAAAAAHQnTgMAAAAA0J04DQAAAABAd+I0AAAAAADdidMAAAAAAHQnTgMAAAAA0J04DQAAAABAd+I0AAAAAADdidMAAAAAAHQnTgMAAAAA0J04DQAAAABAd+I0AAAAAADdidMAAAAAAHQnTgMAAAAA0J04DQAAAABAd+I0AAAAAADdidMAAAAAAHQnTgMAAAAA0J04DQAAAABAd+I0AAAAAADdidMAAAAAAHQnTgMAAAAA0J04DQAAAABAd+I0AAAAAADdidMAAAAAAHQnTgMAAAAA0J04DQAAAABAd+I0AAAAAADdidMAAAAAAHQnTgMAAAAA0J04DQAAAABAd+I0AAAAAADdidMAAAAAAHQnTgMAAAAA0J04DQAAAABAd+I0AAAAAADdidMAAAAAAHQnTgMAAAAA0J04DQAAAABAd+I0AAAAAADdidMAAAAAAHQnTgMAAAAA0J04DQAAAABAd+I0AAAAAADdjVScrqqNqurVVfWlqvp5Vd1eVTdX1XlV9ZdVNen3qarZVfXVqrphcMxlVXVIVa2+iGvtVVXnDM5/a1VdWFUHrLhvBwAAAACw6pg17AGW0ouTfCzJr5KcneSXSTZJ8sIk/5bkOVX14tZaGz+gqvZOckqSO5KclOSGJM9P8oEkzxic8z6q6k1Jjk5yfZITktyVZL8kx1XVE1prf72iviAAAAAAwKpg1OL0VUlekOSM1tqC8ZVV9Y4kFyV5UcZC9SmD9Q9O8skk85Ps0lr7/mD94UnOSrJfVb2ktXbiQufaMsn7Mxaxn9JamzNY/+4k/5XkbVV1SmvtghX7VQEAAAAAZq6ReqxHa+2s1trpC4fpwfq5ST4++LjLQpv2S/KQJCeOh+nB/nckeefg4+snXOZVSdZKcsx4mB4cc2OSfxh8fN3yfRMAAAAAgFXbSMXpxbh7sLxnoXW7DZZnTrL/uUnmJZldVWst4TFfm7APAAAAAADLYNQe6zGpqpqV5JWDjwtH5UcPlldNPKa1dk9VXZPkcUkemeTyJTjmV1V1W5LNq2rt1tq8xcx18RSbHrOo4wAAAAAAZrqZcuf0+5I8PslXW2tfX2j9eoPlzVMcN75+/WU4Zr0ptgMAAAAAsBgjf+d0Vb0lyduSXJHkFUMe5z5aaztMtn5wR/X2nccBAAAAAFhpjPSd01X1piQfSvLTJLu21m6YsMvi7nIeX3/TMhwz1Z3VAAAAAAAsxsjG6ao6JMnRSX6csTA9d5Ldrhwst5nk+FlJtsrYCxSvXsJjNkuyTpLrFve8aQAAAAAApjaScbqq/i7JB5L8IGNh+jdT7HrWYLnnJNuelWTtJOe31u5cwmOeM2EfAAAAAACWwcjF6ao6PGMvQLw4ye6ttd8tYveTk/wuyUuq6ikLneMBSd4z+PixCcccm+TOJG+qqi0XOmaDJO8YfPz48nwHAAAAAIBV3Ui9ELGqDkjy7iTzk3wnyVuqauJuc1prxyVJa+33VfWajEXqc6rqxCQ3JHlBkkcP1p+08MGttWuq6m+SfDjJ96vqpCR3JdkvyeZJ/l9r7YIV8w0BAAAAAFYNIxWnM/aM6CRZPckhU+zz7STHjX9orZ1aVTsnOSzJi5I8IMnPk7w1yYdba23iCVprR1fVnCR/neSVGbvD/KdJ3tlaO346vggAAAAAwKpspOJ0a+3IJEcuw3HfTfLcpTzm9CSnL+21AAAAAABYvJF75jQAAAAAAKNPnAYAAAAAoDtxGgAAAACA7sRpAAAAAAC6E6cBAAAAAOhOnAYAAAAAoDtxGgAAAACA7sRpAAAAAAC6E6cBAAAAAOhOnAYAAAAAoDtxGgAAAACA7sRpAAAAAAC6E6cBAAAAAOhOnAYAAAAAoDtxGgAAAACA7sRpAAAAAAC6E6cBAAAAAOhOnAYAAAAAoDtxGgAAAACA7sRpAAAAAAC6E6cBAAAAAOhOnAYAAAAAoDtxGgAAAACA7sRpAAAAAAC6E6cBAAAAAOhOnAYAAAAAoDtxGgAAAACA7sRpAAAAAAC6E6cBAAAAAOhOnAYAAAAAoDtxGgAAAACA7sRpAAAAAAC6E6cBAAAAAOhOnAYAAAAAoDtxGgAAAACA7sRpAAAAAAC6E6cBAAAAAOhOnAYAAAAAoDtxGgAAAACA7sRpAAAAAAC6E6cBAAAAAOhOnAYAAAAAoDtxGgAAAACA7sRpAAAAAAC6E6cBAAAAAOhOnAYAAAAAoDtxGgAAAACA7sRpAAAAAAC6E6cBAAAAAOhOnAYAAAAAoDtxGgAAAACA7sRpAAAAAAC6E6cBAAAAAOhOnAYAAAAAoDtxGgAAAACA7sRpAAAAAAC6E6cBAAAAAOhOnAYAAAAAoDtxGgAAAACA7sRpAAAAAAC6E6cBAAAAAOhOnAYAAAAAoDtxGgAAAACA7sRpAAAAAAC6E6cBAAAAAOhOnAYAAAAAoDtxGgAAAACA7sRpAAAAAAC6E6cBAAAAAOhOnAYAAAAAoDtxGgAAAACA7sRpAAAAAAC6E6cBAAAAAOhOnAYAAAAAoDtxGgAAAACA7sRpAAAAAAC6E6cBAAAAAOhOnAYAAAAAoDtxGgAAAACA7sRpAAAAAAC6E6cBAAAAAOhOnAYAAAAAoDtxGgAAAACA7sRpAAAAAAC6E6cBAAAAAOhOnAYAAAAAoDtxGgAAAACA7sRpAAAAAAC6E6cBAAAAAOhOnAYAAAAAoDtxGgAAAACA7sRpAAAAAAC6E6cBAAAAAOhOnAYAAAAAoDtxGgAAAACA7sRpAAAAAAC6E6cBAAAAAOhOnAYAAAAAoDtxGgAAAACA7sRpAAAAAAC6E6cBAAAAAOhOnAYAAAAAoDtxGgAAAACA7sRpAAAAAAC6E6cBAAAAAOhOnAYAAAAAoDtxGgAAAACA7sRpAAAAAAC6E6cBAAAAAOhOnAYAAAAAoDtxGgAAAACA7sRpAAAAAAC6E6cBAAAAAOhOnAYAAAAAoDtxGgAAAACA7sRpAAAAAAC6E6cB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",
      "text/plain": [
       "<Figure size 864x504 with 1 Axes>"
      ]
     },
     "execution_count": 45,
     "metadata": {
      "image/png": {
       "height": 424,
       "width": 723
      },
      "needs_background": "light"
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sns.histplot(x=titanic_data['Embarked'], hue=titanic_data['Survived'], multiple='stack')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "### Show survival wrt to Fare\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 864x504 with 1 Axes>"
      ]
     },
     "execution_count": 57,
     "metadata": {
      "image/png": {
       "height": 424,
       "width": 723
      },
      "needs_background": "light"
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sns.histplot(x=titanic_data['Fare'], hue=titanic_data['Survived'], multiple='stack')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "## Featuring Engineering\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "#### before modeling the data, transform gender\\(Sex\\) into numeric\n",
    "\n",
    "- Male \\- 1\n",
    "- Female \\- 0\n",
    "\n",
    "**Use LabelEncoder from sklearn library**\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>892</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Kelly, Mr. James</td>\n",
       "      <td>1</td>\n",
       "      <td>34.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>330911</td>\n",
       "      <td>7.8292</td>\n",
       "      <td>Q</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>893</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Wilkes, Mrs. James (Ellen Needs)</td>\n",
       "      <td>0</td>\n",
       "      <td>47.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>363272</td>\n",
       "      <td>7.0000</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>894</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>Myles, Mr. Thomas Francis</td>\n",
       "      <td>1</td>\n",
       "      <td>62.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>240276</td>\n",
       "      <td>9.6875</td>\n",
       "      <td>Q</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>895</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Wirz, Mr. Albert</td>\n",
       "      <td>1</td>\n",
       "      <td>27.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>315154</td>\n",
       "      <td>8.6625</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>896</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Hirvonen, Mrs. Alexander (Helga E Lindqvist)</td>\n",
       "      <td>0</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3101298</td>\n",
       "      <td>12.2875</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   PassengerId  Survived  Pclass  \\\n",
       "0          892         0       3   \n",
       "1          893         1       3   \n",
       "2          894         0       2   \n",
       "3          895         0       3   \n",
       "4          896         1       3   \n",
       "\n",
       "                                           Name  Sex   Age  SibSp  Parch  \\\n",
       "0                              Kelly, Mr. James    1  34.5      0      0   \n",
       "1              Wilkes, Mrs. James (Ellen Needs)    0  47.0      1      0   \n",
       "2                     Myles, Mr. Thomas Francis    1  62.0      0      0   \n",
       "3                              Wirz, Mr. Albert    1  27.0      0      0   \n",
       "4  Hirvonen, Mrs. Alexander (Helga E Lindqvist)    0  22.0      1      1   \n",
       "\n",
       "    Ticket     Fare Embarked  \n",
       "0   330911   7.8292        Q  \n",
       "1   363272   7.0000        S  \n",
       "2   240276   9.6875        Q  \n",
       "3   315154   8.6625        S  \n",
       "4  3101298  12.2875        S  "
      ]
     },
     "execution_count": 58,
     "metadata": {
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.preprocessing import LabelEncoder\n",
    "labelencoder = LabelEncoder()\n",
    "titanic_data['Sex'] = labelencoder.fit_transform(titanic_data['Sex'])\n",
    "\n",
    "titanic_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 864x504 with 1 Axes>"
      ]
     },
     "execution_count": 60,
     "metadata": {
      "image/png": {
       "height": 424,
       "width": 723
      },
      "needs_background": "light"
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sns.countplot(x=titanic_data['Sex'],hue=titanic_data['Survived'])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "#### Drop unneccasey column for modeling\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {
    "collapsed": true,
    "scrolled": true
   },
   "outputs": [
    {
     "ename": "KeyError",
     "evalue": "\"['PassengerId', 'Name', 'SibSp', 'Parch', 'Ticket', 'Fare'] not found in axis\"",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "\u001b[0;32m/tmp/ipykernel_266/3539088817.py\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mtitanic_data\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"PassengerId\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\"Name\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\"SibSp\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\"Parch\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\"Ticket\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\"Fare\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\"Age\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"Embarked\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0minplace\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36mdrop\u001b[0;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[1;32m   5256\u001b[0m                 \u001b[0mweight\u001b[0m  \u001b[0;36m1.0\u001b[0m     \u001b[0;36m0.8\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5257\u001b[0m         \"\"\"\n\u001b[0;32m-> 5258\u001b[0;31m         return super().drop(\n\u001b[0m\u001b[1;32m   5259\u001b[0m             \u001b[0mlabels\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5260\u001b[0m             \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36mdrop\u001b[0;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[1;32m   4547\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabels\u001b[0m \u001b[0;32min\u001b[0m \u001b[0maxes\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4548\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mlabels\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4549\u001b[0;31m                 \u001b[0mobj\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mobj\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_drop_axis\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4550\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4551\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m_drop_axis\u001b[0;34m(self, labels, axis, level, errors, only_slice)\u001b[0m\n\u001b[1;32m   4589\u001b[0m                 \u001b[0mnew_axis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4590\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4591\u001b[0;31m                 \u001b[0mnew_axis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4592\u001b[0m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_indexer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_axis\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4593\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mdrop\u001b[0;34m(self, labels, errors)\u001b[0m\n\u001b[1;32m   6697\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mmask\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0many\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6698\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0merrors\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0;34m\"ignore\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 6699\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"{list(labels[mask])} not found in axis\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   6700\u001b[0m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m~\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6701\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdelete\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mKeyError\u001b[0m: \"['PassengerId', 'Name', 'SibSp', 'Parch', 'Ticket', 'Fare'] not found in axis\""
     ]
    }
   ],
   "source": [
    "titanic_data.drop(columns=[\"PassengerId\",\"Name\",\"SibSp\",\"Parch\",\"Ticket\",\"Fare\",\"Age\", \"Embarked\"],inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Sex</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Survived  Pclass  Sex\n",
       "0         0       3    1\n",
       "1         1       3    0\n",
       "2         0       2    1\n",
       "3         0       3    1\n",
       "4         1       3    0"
      ]
     },
     "execution_count": 88,
     "metadata": {
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "titanic_data.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "## Modeling\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
   ],
   "source": [
    "X=titanic_data[['Sex', 'Pclass']]\n",
    "Y=titanic_data['Survived']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "##### Split data into test and train by using Sklearn library\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
   ],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "X_train, X_test, Y_train, Y_test = train_test_split(X,Y,test_size=0.2, random_state=0)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "#### Create training Model\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-2 {color: black;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression(random_state=0)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression(random_state=0)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "LogisticRegression(random_state=0)"
      ]
     },
     "execution_count": 76,
     "metadata": {
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.metrics import accuracy_score,precision_score,confusion_matrix\n",
    "log = LogisticRegression(random_state = 0)\n",
    "log.fit(X_train, Y_train)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "#### create Prediction model\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1,\n",
       "       0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1,\n",
       "       0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1,\n",
       "       1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0])"
      ]
     },
     "execution_count": 77,
     "metadata": {
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pred = log.predict(X_test)\n",
    "pred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy_score : 1.0\n",
      "Matrix : [[45  0]\n",
      " [ 0 39]]\n"
     ]
    }
   ],
   "source": [
    "print(\"Accuracy_score :\", accuracy_score(Y_test, pred))\n",
    "print(\"Matrix :\",confusion_matrix(Y_test,pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "360    0\n",
       "170    0\n",
       "224    1\n",
       "358    0\n",
       "309    1\n",
       "      ..\n",
       "100    1\n",
       "7      0\n",
       "22     1\n",
       "68     0\n",
       "328    0\n",
       "Name: Survived, Length: 84, dtype: int64"
      ]
     },
     "execution_count": 72,
     "metadata": {
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Y_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
   ],
   "source": [
    "submission=X.iloc[:,:].values\n",
    "y_final=log.predict(submission)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(418,)"
      ]
     },
     "execution_count": 92,
     "metadata": {
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_final.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
   ],
   "source": [
    "final = pd.DataFrame()\n",
    "final[\"Sex\"]= X['Sex']\n",
    "final[\"survived\"]=y_final"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
   ],
   "source": [
    "final.to_csv(\"submission.csv\",index=False)|"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "##### Trainig is completed, now check\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": false
   },
   "source": [
    "#### predict\\(\\[\\[ Pclass, Sex \\]\\]\\) =&gt; survived or not survived\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "So soory, Not Survived\n"
     ]
    }
   ],
   "source": [
    "import warnings\n",
    "warnings.filterwarnings(\"ignore\")\n",
    "\n",
    "result = log.predict([[5,0]])\n",
    "if(result == 0):\n",
    "    print(\"So soory, Not Survived\")\n",
    "else:\n",
    "    print(\"Survived\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 0,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
   ],
   "source": [
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "argv": [
    "/usr/bin/python3",
    "-m",
    "ipykernel",
    "--HistoryManager.enabled=False",
    "--matplotlib=inline",
    "-c",
    "%config InlineBackend.figure_formats = set(['retina'])\nimport matplotlib; matplotlib.rcParams['figure.figsize'] = (12, 7)",
    "-f",
    "{connection_file}"
   ],
   "display_name": "Python 3 (system-wide)",
   "env": {
   },
   "language": "python",
   "metadata": {
    "cocalc": {
     "description": "Python 3 programming language",
     "priority": 100,
     "url": "https://www.python.org/"
    }
   },
   "name": "python3",
   "resource_dir": "/ext/jupyter/kernels/python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
